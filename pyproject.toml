[tool.poetry]
name = "ecif"
version = "0.1.0"
description = ""
authors = ["Thusitha Chandrapala <thusithanc@gmail.com>"]
readme = "README.md"
packages = [{include = "ecif"}]


[tool.poetry.dependencies]
python = ">=3.10,<3.13"
pandas = "^2.1.1"
statsmodels = "^0.14.0"
pyyaml = "^6.0.1"
numpy = "^1.26.0"
pydantic = "^2.4.2"
pydantic-settings = "^2.0.3"
requests = "^2.31.0"
matplotlib = "^3.8.0"
pydantic-yaml = "^1.2.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
tox = "^4.11.3"
black = "^23.9.1"
pylint = "^3.0.1"
isort = "^5.12.0"
pydocstyle = "^6.3.0"
autoflake = "^2.2.1"
autopep8 = "^2.0.4"
pytest-cov = "^4.1.0"
jupyter = "^1.0.0"
jupyterlab = "^4.0.7"

[tool.black]
line-length = 100

[tool.autoflake]
in-place = true
ignore-init-module-imports = true
recursive = true
remove-all-unused-imports = true
verbose = "true"

[tool.autopep8]
in-place = true
aggressive = 2
recursive  = true

[tool.isort]
profile = "black"
line_length = 120

[tool.pydocstyle]
inherit = false
convention = "google"
match = ".*\\.py"
add-ignore = "D104,D205"

[tool.coverage]
cov = ["ecif", "tests"]
cov-report = "term-missing"

[tool.pytest.ini_options]
addopts = "-ra -q --cov=ecif --cov=tests --cov-report=term-missing"
asyncio_mode = "auto"

[tool.pylint]
max-line-length = 120
min-similarity-lines=8
disable = ["too-few-public-methods", "fixme", "broad-exception-caught", "logging-fstring-interpolation"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
